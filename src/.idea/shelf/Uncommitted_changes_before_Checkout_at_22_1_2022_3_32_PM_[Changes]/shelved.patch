Index: application/Models/Certification.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># xu yong lin\r\n# Consists of: create, read, update, delete of restaurant certifications\r\nimport logging\r\nimport pickle\r\nimport shelve\r\nimport uuid\r\n\r\nDB_CERT = 'certification'\r\n\r\n\r\nclass Certification:\r\n    def __init__(self, id: str,\r\n                 hygiene_cert=None, halal_cert=None, vegetarian_cert=None, vegan_cert=None,\r\n                 noPorknoLard=None, noBeef=None):\r\n        self.restaurant_id = id\r\n        with shelve.open(DB_CERT, 'c') as db:\r\n            self.restaurant_id = db['restaurant_id']\r\n        self.hygiene_cert = hygiene_cert\r\n        self.halal_cert = halal_cert\r\n        self.vegetarian_cert = vegetarian_cert\r\n        self.vegan_cert = vegan_cert\r\n        self.noPorknoLard = noPorknoLard\r\n        self.noBeef = noBeef\r\n        self.certificates = {}\r\n\r\n        with shelve.open(DB_CERT, 'c') as db:\r\n            db['restaurant_id'] = self.restaurant_id\r\n            cert_systems_dict = {}\r\n            if 'cert_systems_dict' in db:\r\n                cert_systems_dict = db['cert_systems_dict']\r\n            cert_systems_dict[self.restaurant_id] = self\r\n            db['cert_systems_dict'] = cert_systems_dict\r\n\r\n    def create_res_cert(self, restaurant_id, hygiene_c, halal_c, vegetarian_c, vegan_c,\r\n                        noporknolard, nobeef):\r\n        self.certificates[restaurant_id] = Certification(restaurant_id, hygiene_c, halal_c, vegetarian_c, vegan_c,\r\n                                                         noporknolard, nobeef)\r\n        with shelve.open(DB_CERT, 'c') as cert_db:\r\n            try:\r\n                cert_systems_dict = {}\r\n                if \"cert_systems_dict\" in cert_db:\r\n                    cert_systems_dict = cert_db[\"cert_systems_dict\"]\r\n\r\n                cert_systems_dict[self.restaurant_id] = self\r\n                cert_db[\"cert_systems_dict\"] = cert_systems_dict\r\n\r\n                logging.info('create_res_cert: successfully created object')\r\n            except Exception as e:\r\n                logging.error('create_res_cert: fail to access db (%s)' % e)\r\n\r\n    # read cert\r\n    def read_res_cert(self, restaurant_id):\r\n        with shelve.open(DB_CERT, 'c') as cert_db:\r\n            try:\r\n                if \"cert_systems_dict\" in cert_db:\r\n                    certification_dict = cert_db[\"cert_systems_dict\"]\r\n                    print(certification_dict)\r\n                    return certification_dict[restaurant_id]\r\n                logging.info('read_res_cert: reading from db')\r\n\r\n            except Exception as e:\r\n                logging.error('read_res_cert: fail to read from db (%s)' % e)\r\n        return None\r\n\r\n    def get_certs(self, restaurant_id):\r\n        cert_list = []\r\n        for cert in self.certificate:\r\n            c = self.certificate[cert]\r\n            cert_list.append(c)\r\n        return cert_list\r\n\r\n    # todo: update cert\r\n    def update_res_cert(self, restaurant_id, hygiene_c, halal_c, vegetarian_c, vegan_c,\r\n                        noporknolard, nobeef):\r\n        pass\r\n\r\n    # todo: delete cert\r\n    def delete_certificate(self ,id):\r\n        # with shelve.open(DB_CERT, 'c') as cert_db:\r\n        #     try:\r\n        #         certification_dict = cert_db[\"certification\"]\r\n        #         if id in certification_dict:\r\n        #             certification_dict.pop(id)\r\n        #         cert_db[\"certification\"] = certification_dict\r\n        #     except Exception as e:\r\n        #         logging.error(\"delete_cert: error in opening db (%s)\" % e)\r\n        pass\r\n\r\n    # query db for a cert item by passing in the id\r\n    @staticmethod\r\n    def query(id):\r\n        # 'cert_systems_dict' not id DB_CERT, DB_CERT EMPTY\r\n        with shelve.open(DB_CERT, 'c') as db:\r\n            if 'cert_systems_dict' in db:\r\n                cert_systems_dict = db['cert_systems_dict']\r\n                print(cert_systems_dict)\r\n                return cert_systems_dict.get(id)\r\n            else:\r\n                db['cert_systems_dict']\r\n        return None\r\n            # try:\r\n            #     if 'cert_systems_dict' in db:\r\n            #         cert_systems_dict = db['cert_systems_dict']\r\n            #         return cert_systems_dict.get(id, None)\r\n            # except Exception as e:\r\n            #     print(e)\r\n            #     logging.error(\r\n            #         'Certificate: tried to query id %s but not found' % id)\r\n            #     return None\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/application/Models/Certification.py b/application/Models/Certification.py
--- a/application/Models/Certification.py	
+++ b/application/Models/Certification.py	
@@ -9,9 +9,13 @@
 
 
 class Certification:
-    def __init__(self, id: str,
+    # def __init__(self, id,
+    #              hygiene_cert=None, halal_cert=None, vegetarian_cert=None, vegan_cert=None,
+    #              noPorknoLard=None, noBeef=None):
+    def __init__(self,
                  hygiene_cert=None, halal_cert=None, vegetarian_cert=None, vegan_cert=None,
                  noPorknoLard=None, noBeef=None):
+
         self.restaurant_id = id
         with shelve.open(DB_CERT, 'c') as db:
             self.restaurant_id = db['restaurant_id']
